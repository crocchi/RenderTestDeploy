<script>
  window.onload = function () { document.body.classList.remove('is-preload'); }
  window.ontouchmove = function () { return false; }
  window.onorientationchange = function () { document.body.scrollTop = 0; }
</script>

<script src="/socket.io/socket.io.js"></script>
<script>
  let socket;
  if (localStorage.getItem("nickName")) {
    socket = io({
      query: {
        login: localStorage.getItem("nickName")
      }
    });
  } else socket = io("http://fra-srv.mywire.org:51420");

  // serve?
  const getTime = () => {
    const now = new Date();
    return `${now.getHours()}:${now.getMinutes()}:${now.getSeconds()}`
  }

  let form = document.getElementById('form');
  let input = document.getElementById('input');
  let messages = document.getElementById('messages');

  form.addEventListener('submit', function (e) {
    e.preventDefault();
    if (input.value) {
      socket.emit('chat message', input.value);
      input.value = '';
    }
  });

  const renderChatRecord = msgObj => {
    const messageEl = document.createElement('li');
    messageEl.className = 'message parker';
    messageEl.innerHTML = `<chat>${msgObj.userName}</chat> ${msgObj.content} <time>${msgObj.createdAt}</time>`
    return messageEl
  }

  const renderMessageObject = msgObj => {
    const messageEl = document.createElement('li');
    messageEl.className = 'message parker';
    renderedString = !msgObj.isSystemMessage 
      ?  `<chat>${msgObj.username}</chat> ${msgObj.msg} <time>${msgObj.timestamp}</time>`   
      : `<p style="font-style: italic">${msgObj.msg}</p>`
    messageEl.innerHTML = renderedString
    console.log('renderMessageObj out', messageEl.innerHTML)
    return messageEl
  }
  //RICEVE CHAT MESSAGE 
  socket.on('chat message', (fetchedMsg) => {
    console.log('fetchedMsg() in', fetchedMsg)
    const renderedMessage = renderMessageObject(fetchedMsg) 
    messages.appendChild(renderedMessage);
    document.querySelector("#myModal > div").scrollTo(0, 799)
  });


  socket.on("setNick", (userNick) => {
    console.log('ti Ã¨ stato dato il nickName...' + userNick);
    //localStorage.setItem("nickName", userNick);
  });

  let loading = true;
  //  CARICA LA VECCHIA CHAT
  socket.on("chatRecord", (fetchedMsgs) => {
    if (loading) {
      // fetchedMsgs.map?
      for (let i = fetchedMsgs.length - 10; i < fetchedMsgs.length; i++) {
        const renderedChatRecords = renderChatRecord(fetchedMsgs[i])
        messages.appendChild(renderedChatRecords);
      }
    }
    //localStorage.setItem("nickName", userNick);
    loading = false;
  });

</script>